<?xml version="1.0" ?>
<robot name="create3" xmlns:xacro="http://ros.org/wiki/xacro">
  <xacro:include filename="$(find irobot_create_description)/urdf/bumper.urdf.xacro" />
  <xacro:include filename="$(find irobot_create_description)/urdf/button.urdf.xacro" />
  <xacro:include filename="$(find irobot_create_description)/urdf/caster.urdf.xacro" />
  <xacro:include filename="$(find irobot_create_description)/urdf/common_properties.urdf.xacro"/>
  <xacro:include filename="$(find irobot_create_description)/urdf/sensors/cliff_sensor.urdf.xacro"/>
  <xacro:include filename="$(find irobot_create_description)/urdf/sensors/imu.urdf.xacro" />
  <xacro:include filename="$(find irobot_create_description)/urdf/sensors/ir_intensity.urdf.xacro" />
  <xacro:include filename="$(find irobot_create_description)/urdf/sensors/ir_opcode_receivers.urdf.xacro" />
  <xacro:include filename="$(find irobot_create_description)/urdf/sensors/optical_mouse.urdf.xacro"/>
  <xacro:include filename="$(find irobot_create_description)/urdf/wheel_with_wheeldrop.urdf.xacro" />
  
  <xacro:arg name="camera_visual" default="true"/>
  <xacro:property name="r200_cam_rgb_px" value="0.005"/>
  <xacro:property name="r200_cam_rgb_py" value="0.018"/>
  <xacro:property name="r200_cam_rgb_pz" value="0.013"/>
  <xacro:property name="r200_cam_depth_offset" value="0.01"/>
 
  <!-- Mechanical properties -->
  <xacro:property name="body_z_offset"           value="${-2.5*cm2m}" />
  <xacro:property name="body_collision_z_offset" value="${1*cm2m}" />
  <xacro:property name="body_mass"               value="2.300" />
  <xacro:property name="body_radius"             value="${16.4*cm2m}" />
  <xacro:property name="body_length"             value="${6*cm2m}" />

  <xacro:property name="bumper_mass"             value="0.1" />
  <xacro:property name="bumper_offset_z"         value="${-2.5*cm2m}" />
  <xacro:property name="bumber_inertial_x"       value="${8*cm2m}" />
  <xacro:property name="bumper_inertial_z"       value="${2*cm2m}"/>

  <xacro:property name="wheel_height"            value="${-2.75*cm2m}" />
  <xacro:property name="distance_between_wheels" value="${23.3*cm2m}" />

  <xacro:property name="caster_position_x"       value="${12.5*cm2m}" />
  <xacro:property name="caster_position_z"       value="${-5.55*cm2m}" />

  <xacro:property name="wheel_drop_offset_z"     value="${3.5*mm2m}"/>
  <xacro:property name="wheel_drop_z"            value="${wheel_height + wheel_drop_offset_z}"/>

  <xacro:property name="base_link_z_offset"     value="${6.42*cm2m}"/>

  <!-- Docking properties -->
  <xacro:property name="robot_model_name" value="create3"/>
  <xacro:property name="receiver_link_name" value="ir_omni"/>
  <xacro:property name="dock_model_name" value="standard_dock"/>
  <xacro:property name="emitter_link_name" value="halo_link"/>

  <!-- Create 3 base definition-->
  <link name="base_link">
    <visual>
      <origin xyz="0 0 ${body_z_offset + base_link_z_offset}" rpy="0 0 ${pi/2}"/>
      <geometry>
        <mesh filename="file://$(find irobot_create_description)/meshes/body_visual.dae" />
      </geometry>
    </visual>
    <collision name="create3_base_collision">
      <origin xyz="0 0 ${body_z_offset + body_collision_z_offset  + base_link_z_offset}" rpy="0 0 ${pi/2}"/>
      <geometry>
        <cylinder length="${body_length}" radius="${body_radius}"/>
      </geometry>
    </collision>
    <xacro:inertial_cylinder_with_pose mass="${body_mass}" radius="${body_radius}" length="${body_length}">
      <origin xyz="0 0 ${body_collision_z_offset + base_link_z_offset}"/>
    </xacro:inertial_cylinder_with_pose>
  </link>

  <!-- Bumper -->
  <xacro:bumper
      visual_mesh="file://$(find irobot_create_description)/meshes/bumper_visual.dae"
      collision_mesh="file://$(find irobot_create_description)/meshes/bumper_collision.dae">
    <origin xyz="0 0 ${bumper_offset_z  + base_link_z_offset}"/>
    <inertial>
      <origin xyz="${bumber_inertial_x} 0 ${bumper_inertial_z}"/>
      <mass value="${bumper_mass}"/>
      <inertia ixx="0.0013483753405" ixy="0.0000000454352" ixz="0.0000014434849"
               iyy="0.0002521736852" iyz="-0.0000000006721" izz="0.0015442525386"/>
    </inertial>
  </xacro:bumper>

  <!-- Wheels with mechanical wheel drop -->
  <xacro:wheel_with_wheeldrop name="left">
    <origin xyz="0 ${distance_between_wheels/2} ${wheel_drop_z  + base_link_z_offset}" rpy="${-pi/2} 0 0"/>
  </xacro:wheel_with_wheeldrop>

  <xacro:wheel_with_wheeldrop name="right">
    <origin xyz="0 ${-distance_between_wheels/2} ${wheel_drop_z  + base_link_z_offset}" rpy="${-pi/2} 0 0"/>
  </xacro:wheel_with_wheeldrop>

  <!-- Caster wheel -->
  <xacro:caster name="front_caster" parent_link="base_link">
    <origin xyz="${caster_position_x} 0 ${caster_position_z  + base_link_z_offset}" rpy="${-pi/2} 0 0"/>
  </xacro:caster>

  <!-- IMU -->
  <xacro:imu_sensor>
    <origin xyz="0.050613 0.043673 ${0.0202 + base_link_z_offset}"/>
  </xacro:imu_sensor>

  <gazebo>
    <plugin name="gazebo_ros2_control" filename="libgazebo_ros2_control.so">
      <parameters> $(find irobot_create_control)/config/control.yaml </parameters>
    </plugin>
  </gazebo>

  <!-- Mouse -->
  <xacro:optical_mouse>
    <origin xyz="0.1015 0.087 ${-0.055 + base_link_z_offset}" rpy="0 0 ${-pi/4}"/>
  </xacro:optical_mouse>

  <!-- Cliffs sensors -->
  <xacro:property name="cliff_z"  value="${-4.5*cm2m}" />

  <xacro:property name="cliff_center_x" value="${16*cm2m}"/>
  <xacro:property name="cliff_center_y" value="${4.5*cm2m}"/>
  <xacro:property name="cliff_center_pitch" value="${80*deg2rad}"/>
  <xacro:property name="cliff_center_yaw" value="${65.3*deg2rad}"/>

  <xacro:property name="cliff_back_x" value="${6*cm2m}"/>
  <xacro:property name="cliff_back_y" value="${-14.5*cm2m}"/>
  <xacro:property name="cliff_back_pitch" value="${80*deg2rad}"/>
  <xacro:property name="cliff_back_yaw" value="${167.4*deg2rad}"/>

  <xacro:cliff_sensor name="side_left">
    <origin xyz="${cliff_back_x} ${cliff_back_y} ${cliff_z + base_link_z_offset}"
            rpy="0 ${cliff_back_pitch} ${cliff_back_yaw}"/>
  </xacro:cliff_sensor>

  <xacro:cliff_sensor name="side_right">
    <origin xyz="${cliff_back_x} ${- cliff_back_y} ${cliff_z + base_link_z_offset}"
            rpy="0 ${cliff_back_pitch} ${- cliff_back_yaw}"/>
  </xacro:cliff_sensor>

  <xacro:cliff_sensor name="front_left">
    <origin xyz="${cliff_center_x} ${cliff_center_y} ${cliff_z + base_link_z_offset}"
            rpy="0 ${cliff_center_pitch} ${cliff_center_yaw}"/>
  </xacro:cliff_sensor>

  <xacro:cliff_sensor name="front_right">
    <origin xyz="${cliff_center_x} ${- cliff_center_y} ${cliff_z + base_link_z_offset}"
            rpy="0 ${cliff_center_pitch} ${- cliff_center_yaw}"/>
  </xacro:cliff_sensor>

  <!-- IR intensity sensors -->
  <xacro:property name="ir_intensity_z_pos" value="${-0.7*cm2m}"/>
  <!--
  The robot uses 7 IR sensors in the front to execute a wall-following action
  or reduce the speed when it detects something in front for safety reasons.

  The arrangement of the sensors is defined in the following schema of the top
  view of the robot:
                          Front view
                              |
                              V

                        front_center_left
                front_left            front_center_right
            left                                    front_right
  side_left                                                   right
  -->
  <xacro:ir_intensity name="front_center_left">
    <origin xyz="0.1540 0 ${ir_intensity_z_pos + base_link_z_offset}"/>
  </xacro:ir_intensity>
  <xacro:ir_intensity name="front_center_right">
    <origin xyz="0.1396 -0.0651 ${ir_intensity_z_pos + base_link_z_offset}" rpy="0 0 -0.436"/>
  </xacro:ir_intensity>
  <xacro:ir_intensity name="front_left">
    <origin xyz="0.1396 0.0651 ${ir_intensity_z_pos + base_link_z_offset}" rpy="0 0 0.436"/>
  </xacro:ir_intensity>
  <xacro:ir_intensity name="front_right">
    <origin xyz="0.0990 -0.1180 ${ir_intensity_z_pos + base_link_z_offset}" rpy="0 0 -0.873"/>
  </xacro:ir_intensity>
  <xacro:ir_intensity name="left">
    <origin xyz="0.0990 0.1180 ${ir_intensity_z_pos + base_link_z_offset}" rpy="0 0 0.873"/>
  </xacro:ir_intensity>
  <xacro:ir_intensity name="right">
    <origin xyz="0.0399 -0.1488 ${ir_intensity_z_pos + base_link_z_offset}" rpy="0 0 -1.309"/>
  </xacro:ir_intensity>
  <xacro:ir_intensity name="side_left">
    <origin xyz="0.0399 0.1488 ${ir_intensity_z_pos + base_link_z_offset}" rpy="0 0 1.309"/>
  </xacro:ir_intensity>

  <!-- Buttons -->
  <xacro:button
      name="button_1">
      <origin xyz="0.06 0.37 ${0.08 + base_link_z_offset}" rpy="0 ${-pi/2} 0"/>
  </xacro:button>
  <xacro:button
      name="button_2">
      <origin xyz="0.06 -0.37 ${0.08 + base_link_z_offset}" rpy="0 ${-pi/2} 0"/>
  </xacro:button>
  <xacro:button
      name="button_power">
      <origin xyz="0.06 0 ${0.08 + base_link_z_offset}" rpy="0 ${-pi/2} 0"/>
  </xacro:button>

  <!-- Omni IR receiver (sensor 0) parameters and Front-facing IR receiver (sensor 1) parameters -->
  <xacro:property name="ir_omni_fov_rad" value="${220.0*deg2rad}"/>
  <xacro:property name="ir_front_facing_fov_rad" value="${pi/2}"/>
  <xacro:ir_opcode_receivers robot_model_name="${robot_model_name}" dock_model_name="${dock_model_name}"
    emitter_link_name="${emitter_link_name}" sensor_0_range="0.01" sensor_0_fov="${ir_omni_fov_rad}"
    sensor_1_range="0.5" sensor_1_fov="${ir_front_facing_fov_rad}" >
    <origin xyz="0.153 0 ${0.035 + base_link_z_offset}"/>
  </xacro:ir_opcode_receivers>


  

  <!-- Ground truth pose -->
  <gazebo>
    <plugin name="gazebo_ros_p3d_robot" filename="libgazebo_ros_p3d.so">
      <ros>
        <namespace>/</namespace>
        <remapping>odom:=sim_ground_truth_pose</remapping>
      </ros>
      <body_name>base_link</body_name>
      <frame_name>world</frame_name>
      <update_rate>62</update_rate>
      <xyz_offset>0 0 0</xyz_offset>
      <rpy_offset>0.0 0.0 0.0</rpy_offset>
      <gaussian_noise>0.0</gaussian_noise>
    </plugin>
  </gazebo>

  <!-- Dock status -->
  <gazebo>
    <plugin name="dock_status_publisher" filename="libgazebo_ros_create_docking_status.so">
      <ros>
        <namespace>/</namespace>
        <remapping>~/out:=dock</remapping>
      </ros>
      <update_rate>1.0</update_rate>
      <robot_model_name>${robot_model_name}</robot_model_name>
      <receiver_link_name>${receiver_link_name}</receiver_link_name>
      <dock_model_name>${dock_model_name}</dock_model_name>
      <emitter_link_name>${emitter_link_name}</emitter_link_name>
    </plugin>
  </gazebo>

<!-- Arm base definition-->
<link name="arm_base_link">
  <visual>
    <origin xyz="-0.06 0 0.096" rpy="0 0 0"/>
    <geometry>
      <mesh filename="file://$(find irobot_create_description)/meshes/arm/base.stl" scale="0.001 0.001 0.001"/>
    </geometry>
  </visual>

  <!-- <collision>
    <origin xyz="0 0 0" rpy="0 0 0"/>
    <geometry>
      <box size="0.012 0.067 0.023"/>
    </geometry>
  </collision> -->

  <!-- <inertial>
    <origin xyz="0 0 0" rpy="0 0 0"/>
    <mass value="0.035"/>
    <inertia ixx="0.001"  ixy="0"  ixz="0" iyy="0.001" iyz="0" izz="0.001" />
  </inertial> -->
</link>

<joint name="arm_base_joint" type="fixed">
  <parent link="base_link"/>
  <child link="arm_base_link"/>
</joint>

  <!-- Camera -->

<link name="camera_link">
  <visual>
    <origin xyz="0 0 0" rpy="0 0 0"/>
    <geometry>
      <box size="0.012 0.067 0.023"/>
    </geometry>
  </visual>

  <collision>
    <origin xyz="0 0 0" rpy="0 0 0"/>
    <geometry>
      <box size="0.012 0.067 0.023"/>
    </geometry>
  </collision>

  <inertial>
    <origin xyz="0 0 0" rpy="0 0 0"/>
    <mass value="0.035"/>
    <inertia ixx="0.001"  ixy="0"  ixz="0" iyy="0.001" iyz="0" izz="0.001" />
  </inertial>
</link>

<joint name="camera_joint" type="fixed">
  <parent link="base_link"/>
  <child link="camera_link"/>
  <origin xyz="${caster_position_x + 0.01} 0 0.105" rpy="0 0 0"/>
</joint>

<link name="camera_depth_frame"/>

<joint name="camera_depth_joint" type="fixed">
  <origin xyz="0 0 0" rpy="${-pi/2} 0 ${-pi/2}"/>
  <parent link="camera_link"/>
  <child link="camera_depth_frame"/>
</joint>

<gazebo reference="camera_link">
  <sensor name="depth_camera" type="depth">
    <visualize>true</visualize>
    <update_rate>30.0</update_rate>
    <camera name="camera">
      <horizontal_fov>1.047198</horizontal_fov>
      <image>
        <width>640</width>
        <height>480</height>
        <format>R8G8B8</format>
      </image>
      <clip>
        <near>0.05</near>
        <far>3</far>
      </clip>
    </camera>
    <plugin name="depth_camera_controller" filename="libgazebo_ros_camera.so">
      <baseline>0.2</baseline>
      <alwaysOn>true</alwaysOn>
      <updateRate>0.0</updateRate>
      <frame_name>camera_depth_frame</frame_name>
      <pointCloudCutoff>0.5</pointCloudCutoff>
      <pointCloudCutoffMax>3.0</pointCloudCutoffMax>
      <distortionK1>0</distortionK1>
      <distortionK2>0</distortionK2>
      <distortionK3>0</distortionK3>
      <distortionT1>0</distortionT1>
      <distortionT2>0</distortionT2>
      <CxPrime>0</CxPrime>
      <Cx>0</Cx>
      <Cy>0</Cy>
      <focalLength>0</focalLength>
      <hackBaseline>0</hackBaseline>
    </plugin>
  </sensor>
</gazebo>

</robot>
